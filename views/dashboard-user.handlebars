<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="utf-8">
  <title>Tutopoint</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <link rel="stylesheet" href="/css/dashboard.css">
  <link rel="stylesheet" href="/css/navbar.css">
  <link rel="stylesheet" href="/css/bulma.min.css">
</head>

<body>
  <div class="page-container">
    <div class="side-nav">
      <aside class="menu">
        <p class="menu-label">General</p>
        <ul class="menu-list">
          <li><a class="menu-link" data-page="upcoming-sessions">Upcoming sessions</a></li>
          <li><a class="menu-link" data-page="my-documents">My documents</a></li>
          <li><a href="/discover">Discover</a></li>
        </ul>
        <p class="menu-label">Account</p>
        <ul class="menu-list">
          <li><a class="menu-link" data-page="balance" href="/pay">Balance: ${{customerBalance}}</a></li>
          <li><a class="menu-link" data-page="balance" href="/referral">Referrals</a></li>
          <li><a href="/logout">Log out</a></li>
        </ul>
      </aside>
    </div>
    <div class="content-container" id="upcoming-sessions">
      <div class="tabs">
        <ul>
          <li class="is-active"><a>
              <h1 id="upcomingSessionsButton" class="link is-size-4 has-text-weight-normal">Upcoming sessions </h1>
            </a></li>
          <li><a>
              <h1 id="pastSessionsButton" class="is-size-4 link"> Past sessions </h1>
            </a></li>
        </ul>
      </div>
      <!--
        <nav class="level">
          <div class="level-left">
            <div class="level-item">
              <p class="subtitle is-5">
                <h1 id="upcomingSessionsButton" class="is-size-3 has-text-weight-normal"
                  style="text-decoration: underline;"> Upcoming sessions </h1>
              </p>
            </div>
            <div class="level-item">
              <h1 id="pastSessionsButton" class="is-size-3"> Past sessions </h1>
            </div>
          </div>
        </nav>
        -->
      {{#each sessions}}
      <div class="session card">
        <div class="card-content">
          <div class="content">
            <div class="columns">
              <div class="column is-1">
                <figure class="profilepicture image is-square">
                  <img src="{{this.createdBy.profilePic}}">
                </figure>
              </div>
              <div class="column is-5">
                <p class="description is-size-3">
                  {{this.title}}
                </p>
                <p class="description is-size-5">
                  {{this.createdBy.university}}
                </p>
                <p class="description is-size-4">
                  {{this.createdBy.grade}} / {{this.createdBy.major}}
                </p>
                <p class="description session-date is-size-5" data-date="{{this.date}}"></p>
                {{#if this.cancelled}}
                <p class="description is-size-5 is-danger" status="cancelled">Cancelled</p>
              </div>
              {{/if}}
              {{#unless this.cancelled}}
              {{#if this.confirmed}}
              {{#if this.completed}}
              <p class="description is-size-5 is-danger" status="completed">Completed</p>
            </div>
            {{/if}}
            {{#unless this.completed}}
            <p class="description is-size-5 is-success" status="confirmed">Confirmed</p>
          </div>
          <div class="column is-3" style="margin-top: auto;">
            <p class="is-size-3 timer" data-date="{{this.date}}">Starts in: </p>
            <button onclick="location.href='/session/{{this._id}}';" class="button is-success is-large is-fullwidth"
              disabled="">Join</button>
          </div>
          <div class="column is-2 is-offset-1" style="margin-top: auto;">
            <buttons>
              <button class="button is-primary is-medium is-fullwidth"
                style="display:block; margin-bottom: 2em;">Reschedule</button>
              <button onclick="location.href='/session/cancel/{{this._id}}';"
                class="button is-danger is-medium is-fullwidth" style="display:block;">Cancel</button>
            </buttons>

          </div>
          {{/unless}}
          {{/if}}
          {{#unless this.confirmed}}
          <p class="description is-size-5 is-success" status="pending">Pending</p>
        </div>
        <div class="column is-3" style="margin-top: auto;">
          <p class="is-size-3 timer" data-date="{{this.date}}">Starts in: </p>
          <button onclick="location.href='/session/{{this._id}}';" class="button is-success is-large is-fullwidth"
            disabled="">Join</button>
        </div>
        <div class="column is-2 is-offset-1" style="margin-top: auto;">
          <buttons>
            <button class="button is-primary is-medium is-fullwidth"
              style="display:block; margin-bottom: 2em;">Reschedule</button>
            <button onclick="location.href='/session/cancel/{{this._id}}';"
              class="button is-danger is-medium is-fullwidth" style="display:block;">Cancel</button>
          </buttons>

        </div>
        {{/unless}}
        {{/unless}}


      </div>
    </div>
  </div>
  </div>
  {{/each}}
  </div>
  </div>
  <div class="content-container" id="my-documents">
    <h1 class="title">Your notes</h1>
    <div class="grid-card-container">
      {{#each documents}}
      <div class="grid-card">
        <a href="/document/{{this._id}}">{{this.title}}</a>
      </div>
      {{/each}}
      <br />
    </div>
    <a href="/create-document" class="button is-primary">New document</a>
  </div>
  <div class="content-container" id="balance">
    <form class="payment-form" method="post" action="/login">
      <label class="label">Your Information</label>
      <div class="field">
        <div class="control">
          <input class="input" name="name" type="text" placeholder="Full Name">
        </div>
      </div>
      <div class="field">
        <div class="control">
          <input class="input" name="email" type="email" placeholder="Email">
        </div>
      </div>
      <label class="label">Card Details</label>
      <div class="field">
        <div class="control">
          <input class="input" name="cardNumber" type="text" placeholder="Card Number">
        </div>
      </div>
      <div class="field has-addons">
        <div class="control">
          <input class="input" name="email" type="text" placeholder="CVV">
        </div>
        <div class="control">
          <input class="input" name="email" type="text" placeholder="MM/YY">
        </div>
      </div>
      <div class="control">
        <button class="button is-primary">Add to your balance</button>
      </div>
    </form>
  </div>
  </div>
  <script>
    initializeTimer()
    initializeDates()
    initializeUpComingSessions()


    function initializeUpComingSessions() {
      const cc = document.querySelectorAll('.session p[status=cancelled], .session p[status=completed]')
      hideSessionsFromDescriptionEl(cc)
      const ss = document.querySelectorAll('.session p[status=pending], .session p[status=confirmed]')
      showSessionsFromDescriptionEl(ss)
    }
    upcomingSessionsButton.addEventListener('click', function (ev) {
      ev.srcElement.parentElement.parentElement.classList.add("is-active");
      pastSessionsButton.parentElement.parentElement.classList.remove("is-active");
      const cc = document.querySelectorAll('.session p[status=cancelled], .session p[status=completed]')
      hideSessionsFromDescriptionEl(cc)
      const ss = document.querySelectorAll('.session p[status=pending], .session p[status=confirmed]')
      showSessionsFromDescriptionEl(ss)
    })

    pastSessionsButton.addEventListener('click', function (ev) {
      ev.srcElement.parentElement.parentElement.classList.add("is-active");
      upcomingSessionsButton.parentElement.parentElement.classList.remove("is-active");
      const cc = document.querySelectorAll('.session p[status=cancelled], .session p[status=completed]')
      showSessionsFromDescriptionEl(cc)
      const ss = document.querySelectorAll('.session p[status=pending], .session p[status=confirmed]')
      hideSessionsFromDescriptionEl(ss)
    })
    changePage("upcoming-sessions");
    $(".menu-link").click(function () {
      //changePage($(this).data("page"));

    });
    function changePage(pageId) {
      $(".content-container").hide();
      $("#" + pageId).show();
    }

    function pad2(number) {

      return (number < 10 ? '0' : '') + number

    }

    function hideSessionsFromDescriptionEl(arr) {
      for (let i = 0; i < arr.length; i++) {
        const el = arr[i].parentElement.parentElement.parentElement.parentElement.parentElement;
        el.classList.add('is-hidden');
      }
    }

    function showSessionsFromDescriptionEl(arr) {
      for (let i = 0; i < arr.length; i++) {
        const el = arr[i].parentElement.parentElement.parentElement.parentElement.parentElement;
        el.classList.remove('is-hidden');
      }
    }



    function initializeDates() {
      const dates = document.getElementsByClassName('session-date');
      for (let i = 0; i < dates.length; i++) {
        const dateEl = dates[i]
        const dateAttribute = new Date(dateEl.getAttribute('data-date'));
        console.log(dateAttribute)
        dateEl.textContent = dateAttribute.toLocaleString({ weekday: 'long', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' }).replace(/:\d{2}\s/, ' ');
      }
    }

    function initializeTimer() {
      const timers = document.getElementsByClassName('timer');
      for (let i = 0; i < timers.length; i++) {
        const timer = timers[i];
        const timerDate = new Date(timer.getAttribute('data-date'));
        const diff = timerDate - Date.now();
        if (!(diff < 0)) {
          if (Math.floor((((diff / 1000) / 60) / 60) / 24) >= 2) {
            const days = Math.floor((((diff / 1000) / 60) / 60) / 24);
            timer.textContent = `Starts in ${days} days`
          }
          else {
            setInterval(() => {
              updateTimer(i)
            }, 1000)

          }
        }
        if (diff < 300000 || diff < 0) {
          timer.textContent = "You're late."
          const joinButton = timer.parentElement.children[1];
          joinButton.removeAttribute('disabled')
        }

      }
    }
    function updateTimer(index) {
      let timers = document.getElementsByClassName('timer');
      let timer = timers[index];
      let timerDate = new Date(timer.getAttribute('data-date'));
      let diff = timerDate - Date.now();
      console.log("Date updated")
      if (!(diff < 0)) {
        if (Math.floor((((diff / 1000) / 60) / 60) / 24) >= 2) {
          const days = Math.floor((((diff / 1000) / 60) / 60) / 24);
          timer.textContent = `Starts in ${days} days`
        }
        else {
          const seconds = pad2(Math.floor(diff / 1000) % 60);
          const minutes = pad2(Math.floor((diff / 1000) / 60 % 60));
          const hours = pad2(Math.floor((((diff / 1000) / 60) / 60)) % 60);
          timer.textContent = `Starts in: ${hours}:${minutes}:${seconds}`
        }
        if (diff < 300000 || diff < 0) {
          const joinButton = timer.parentElement.children[1];
          joinButton.removeAttribute('disabled')
        }
      }


    }
  </script>
</body>

</html>